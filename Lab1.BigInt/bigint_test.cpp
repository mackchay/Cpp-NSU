#include "bigInt.h"
#include "gtest/gtest.h"

class BigIntTest:public ::testing::Test {
protected:
    BigInt a;
    BigInt b;
};


TEST_F(BigIntTest, Inversion) {
    a = 0;
    EXPECT_EQ(~a, BigInt(-1));
    a = 123;
    EXPECT_EQ(~a, BigInt(-124));
    a = -123;
    EXPECT_EQ(~a, BigInt(122));
    a = -1;
    EXPECT_EQ(~a, BigInt(0));
    a = BigInt("123123123123123123123123999");
    EXPECT_EQ(~a, BigInt("-123123123123123123123124000"));
    a = BigInt("-123123123123123123123124000");
    EXPECT_EQ(~a, BigInt("123123123123123123123123999"));
}

TEST_F(BigIntTest, Add) {
    a = 0, b = BigInt("123456789123456789123456789");
    EXPECT_EQ(a + b, BigInt("123456789123456789123456789"));
    a = 9997, b = 123;
    EXPECT_EQ(a + b, 10120);
    a = -123; b = BigInt("123456789999999999999999999999");
    EXPECT_EQ(a + b, BigInt("123456789999999999999999999876"));
    a = BigInt("-999898989899999989"), b = BigInt("-99988989989999998998999989989898999998989989899999");
    EXPECT_EQ(a + b, BigInt("-99988989989999998998999989989899999897979889899988"));
    a = BigInt("123000123000123000"); b = BigInt("-123456789999999999999999999999");
    EXPECT_EQ(a + b, BigInt("-123456789999876999876999876999"));
    a = BigInt("123456789999999999999999999999");
    EXPECT_EQ(++a, BigInt("123456790000000000000000000000"));
    a = BigInt("123456789999999999999999999999");
    EXPECT_EQ(a++, BigInt("123456789999999999999999999999"));
    EXPECT_EQ(a, BigInt("123456790000000000000000000000"));
}

TEST_F(BigIntTest, Sub) {
    a = 0, b = BigInt("123456789123456789123456789");
    EXPECT_EQ(a - b, BigInt("-123456789123456789123456789"));
    a = 0, b = BigInt("123456789123456789123456789");
    EXPECT_EQ(b - a, BigInt("123456789123456789123456789"));
    a = 10010, b = 123;
    EXPECT_EQ(a - b, 9887);
    a = -123; b = BigInt("123456789999999999999999999999");
    EXPECT_EQ(a - b, BigInt("-123456790000000000000000000122"));
    a = BigInt("-999898989899999989"), b = BigInt("-99988989989999998998999989989898999998989989899999");
    EXPECT_EQ(a - b, BigInt("99988989989999998998999989989898000100000089900010"));
    a = BigInt("123000123000123000"); b = BigInt("-123456789999999999999999999999");
    EXPECT_EQ(a - b, BigInt("123456790000123000123000122999"));
    a = BigInt("12345678000000000000000");
    EXPECT_EQ(--a, BigInt("12345677999999999999999"));
    a = BigInt("12345678000000000000000");
    EXPECT_EQ(a--, BigInt("12345678000000000000000"));
    EXPECT_EQ(a, BigInt("12345677999999999999999"));
}

TEST_F(BigIntTest, Mul){
    a = 0, b = BigInt("123456789123456789123456789");
    EXPECT_EQ(a * b, BigInt("0"));
    a = 9997, b = 123123123;
    EXPECT_EQ(a * b, BigInt("1230861860631"));
    a = -123; b = BigInt("12312399912399912300099900002");
    EXPECT_EQ(a * b, BigInt("-1514425189225189212912287700246"));
    a = BigInt("-999898989899999989"), b = BigInt("-321321123123321321123123");
    EXPECT_EQ(a * b, BigInt("321288666444542518589611866876923167645647"));
    a = BigInt("123000123000123000"); b = BigInt("-99999999999999");
    EXPECT_EQ(a * b, BigInt("-12300012300012176999876999877000"));
}


TEST_F(BigIntTest, Div){
    a = 0, b = BigInt("123456789123456789123456789");
    EXPECT_EQ(a / b, BigInt("0"));
    b = 9997, a = 123123123;
    EXPECT_EQ(a / b, BigInt("12316"));
    EXPECT_EQ(b / a, BigInt("0"));
    b = -123; a = BigInt("12312399912399912300099900002");
    EXPECT_EQ(a / b, BigInt("-100100812295934246342275609"));
    a = BigInt("-999898989899999989"), b = BigInt("-123123123");
    EXPECT_EQ(a / b, BigInt("8121130828"));
    a = BigInt("123000123000123000"); b = BigInt("-12316");
    EXPECT_EQ(a / b, BigInt("-9987018756099"));
}


TEST_F(BigIntTest, And){
    a = 0, b = BigInt("123456789123456789123456789");
    EXPECT_EQ(a & b, BigInt("0"));
    a = 9997, b = BigInt("123123123");
    EXPECT_EQ(a & b, BigInt("9473"));
    a = -123; b = BigInt("2120921209212092120921209");
    EXPECT_EQ(a & b, BigInt("2120921209212092120921089"));
    a = BigInt("-999898989899999989"), b = BigInt("-2120921209212092120921209");
    EXPECT_EQ(a & b, BigInt("-2120921317398285467254525"));
    a = BigInt("123000123000123000"); b = BigInt("-65536");
    EXPECT_EQ(a & b, BigInt("123000123000094720"));
}

TEST_F(BigIntTest, Or){
    a = 0, b = BigInt("123456789123456789123456789");
    EXPECT_EQ(a | b, BigInt("123456789123456789123456789"));
    a = 9997, b = BigInt("123123123123123");
    EXPECT_EQ(a | b, BigInt("123123123124159"));
    a = -123; b = BigInt("8800555353512345");
    EXPECT_EQ(a | b, BigInt("-99"));
    a = BigInt("-999898989899999989"), b = BigInt("-1234567891234567");
    EXPECT_EQ(a | b, BigInt("-73483266730501"));
    a = BigInt("123000123000123000"); b = BigInt("-123000123000123000");
    EXPECT_EQ(a | b, BigInt("-8"));
}

TEST_F(BigIntTest, Xor){
    a = 0, b = BigInt("123456789123456789123456789");
    EXPECT_EQ(a ^ b, BigInt("123456789123456789123456789"));
    a = 9997, b = BigInt("123123123123123");
    EXPECT_EQ(a ^ b, BigInt("123123123115198"));
    a = -123; b = BigInt("123123123123123");
    EXPECT_EQ(a ^ b, BigInt("-123123123123146"));
    a = BigInt("-999898989899999989"), b = BigInt("-123123123123123");
    EXPECT_EQ(a ^ b, BigInt("999857596448282950"));
    a = BigInt("123000123000123000"); b = BigInt("-999898989899999989");
    EXPECT_EQ(a ^ b, BigInt("-888512188103427213"));
}

TEST_F(BigIntTest, Mod){
    a = 0, b = BigInt("123456789123456789123456789");
    EXPECT_EQ(a % b, BigInt("123456789123456789123456789"));
    b = 9997, a = 123123123;
    EXPECT_EQ(a % b, BigInt("71"));
    a = -9997, b = 123123123;
    EXPECT_EQ(a % b, BigInt("9997"));
    a = -123; b = BigInt("212092120921020152120921209");
    EXPECT_EQ(b % a, BigInt("73"));
    a = BigInt("-999898989899999989"), b = BigInt("2120921209210201");
    EXPECT_EQ(a % b, BigInt("945100361995318"));
    a = BigInt("-12300012300012300099999900011000"); b = BigInt("-90909091111232323111");
    EXPECT_EQ(a % b, BigInt("26175857829212349111"));
}